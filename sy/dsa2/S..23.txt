slip..23

1.


#include<stdio.h>
#include<stdlib.h>
#define N 5
int Q[N],Pr[N];
int r = -1,f = -1;
void enqueue(int data,int p)
{			    
	int i;		    
	if((f==0)&&(r==N-1)) 
		printf("Queue is full");
	else
	{
		if(f==-1)
		{
			f = r = 0;
			Q[r] = data;
			Pr[r] = p;

		}
		
		else
		{
			for(i = r;i>=f;i--)
			{		   
				if(p>Pr[i])
				{	     
					Q[i+1] = Q[i];
					Pr[i+1] = Pr[i];
				}
				else
					break;
			}
			
			Q[i+1] = data;
			Pr[i+1] = p;
			r++;
		}	
	}

}
void print() 
{			
	int i;
	for(i=f;i<=r;i++)
	{
		printf("\nElement = %d\tPriority = %d",Q[i],Pr[i]);
	}
}
int dequeue() 
{
	if(f == -1)
	{
		printf("Queue is Empty");
	}	
	else
	{
		printf("deleted Element = %d\t Its Priority = %d",Q[f],Pr[f]);
		if(f==r)
			f = r = -1;
		else
			f++;
	}
}
int main()
{
	int opt,n,i,data,p;
	do
	{
		printf("\n\n1.Insert the Data in Queue");
		printf("\n2.Show the Data in Queue ");
		printf("\n3.Delete the data from the Queue");
		printf("\n4.Exit");
		printf("\nEnter Your Choice:");
		scanf("%d",&opt);
		switch(opt)
		{
			case 1:
				printf("\nEnter the number of elements:");
				scanf("%d",&n);
			printf("\nEnter your data and Priority of data:");
				i=0;
				while(i<n)
				{
					scanf("%d %d",&data,&p);
					enqueue(data,p);
					i++;
				}
				break;
			case 2:
				print();
				break;
			case 3:
				 dequeue();
				break;
			case 4:
				exit(0);
			default:
				printf("\nIncorrect Choice");

		}
	}while(opt!=0);
        return 0;
}
-------------------------------------------------------------------------
2.

#include<stdio.h>
#include<string.h>
typedef struct city
{
    char name[20];
    int code;
}city;
int bsearch(int n);
city a[20];
int fileread()
{
    FILE *fp;
    int i=0;
    fp=fopen("cities.txt","r");
    if(fp==NULL)
        printf("File Not Exist");
    else
    {
        while(!feof(fp))
        {
            fscanf(fp,"%s%d", a[i].name, &a[i].code);
            i++;
        }
        fclose(fp);
    }
    return i-1;
}
int main()
{
    int i, n;
    n = fileread();
    if(n>0)
    {
	    for( i=0; i<n; i++)
		printf("%s %d\n", a[i].name, a[i].code);
	    i=bsearch(n);
	    if(i==-1)
	      printf("City Not in list\n");
            else
              printf("City Code: %d\n",a[i].code);
    }
}

int bsearch(int n)
{
    char str[20];
    int mid,l=0,h=n-1;

    printf("Enter city:");
    scanf("%s",str);
    while(l<=h)
    {
	mid=(l+h)/2;
	if(strcmp(str,a[mid].name)==0)
		return mid;
	else if(strcmp(str,a[mid].name)>0)
		l=mid+1;
	else
		h=mid-1;	
    }
    return -1;
 }