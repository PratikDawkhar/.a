slip..14

1.

#include<stdio.h>
#include<stdlib.h>
int lsearch(int a[10],int n,int num);
void generate(int num[10],int n);
void display(int num[10],int n);
int accept();
int main()
{
	int num[10],i,n,num1;
	printf("How many numbers: ");
	scanf("%d",&n);
	printf("These are random numbers generated: ");
	generate(num,n);
	display(num,n);
	num1=accept();
	i=lsearch(num,n,num1);
	if(i==-1)
		printf("Number not found\n");
	else 
		printf("Number found at location %d\n",i+1);
	return 0;
}


void generate(int num[10],int n)
{
	int i;
	for(i=0;i<n;i++)
		num[i]=rand()%100;
}
int lsearch(int a[10],int size,int value)
{
	int i;
	for(i=0;i<size;i++)
	{
		if(a[i]==value)
			return i;
	}		
	return -1;
}
int accept()
{
	int search;
	printf("\nEnter the number you want to search: ");
	scanf("%d",&search);
	return search;
}
void display(int num[10],int n)
{
	int i;
	for(i=0;i<n;i++)
	{
		printf("%d ",num[i]);
	}
}
-----------------------------------------------------------------------------------
2.

#include<stdio.h>
#define MAX 4
int deque[MAX];
int front=-1, rear=-1;
void insert_rear(void);
void insert_front(void);
void delete_rear(void);
void delete_front(void);
void display(void);
int main()
{
	int choice;
	do
	{
		printf("\n1.Insert at rear ");
		printf("\n2.Insert at front ");
		printf("\n3.Delete from rear ");
		printf("\n4.Delete from front ");
		printf("\n5.Display ");
		printf("\n6.Exit");
		printf("\n\nEnter your choice:");
		scanf("%d",&choice);
		switch(choice)
		{
			case 1:insert_rear();
				break;
			case 2:insert_front();
				break;
			case 3:delete_rear();
				break;
			case 4:delete_front();
				break;
			case 5:display();
				break;
		}
	}while(choice!=6);
	return 0;
}
void insert_rear()
{
	int val;
	printf("\nEnter the value to be added:");
	scanf("%d",&val);
	if( (front==0 && rear==MAX-1) || (front==rear+1) )
	{
		printf("\nFULL");
		return;
	}
	if(front==-1)        
	{
		front=0; 
		rear=0;
	}
	else
	{
		if(rear==MAX-1)
		rear=0;
		else
		rear=rear+1;
	}
	deque[rear]=val;
}				 
void insert_front()
{
	int val;
	printf("\nEnter the value to be added:");
	scanf("%d",&val);
	if( (front==0 && rear==MAX-1) || (front==rear+1) )
	{
		printf("\nFULL");
		return;
	}
	if(front==-1)        
	{
		front=0; 
		rear=0;
	}
	else
	{
		if(front==0)
		front=MAX-1;
		else
		front=front-1;
	}
	deque[front]=val;
}				
void delete_rear()		
{				
	if(front==-1)
	{
		printf("\nEMPTY");
		return;
	}
	printf("\nThe deleted element is %d\n",deque[rear]);
	if(front==rear)         
	{
		front=-1;
		rear=-1;
	}
	else
	{
		if(rear==0)
			rear=MAX-1;
		else
			rear=rear-1;
	}
}
void delete_front() 
{                 
	if(front==-1)
	{
	printf("\nEMPTY");
	return;
	}
	printf("\nThe deleted element is %d\n", deque[front]);
	if(front==rear)        
	{
		front=-1;
		rear=-1;
	}
	else
	{
		if(front==MAX-1)
			front=0;
		else
			front=front+1;
	}
}
void display()
{
	int front=front, rear=rear;
	if(front==-1)
	{
		printf("\nQueue is Empty\n");
		return;
	}
	printf("\nThe elements in the queue are: ");
	if(front<=rear)
	{
		while(front<=rear)
		{
			printf("%d\t",deque[front]);
			front++;
		}
	}
	else
	{
		while(front<=MAX-1)
		{
			printf("%d\t",deque[front]);
			front++;
		}
		front=0;
		while(front<=rear)
		{
			printf("%d\t",deque[front]);
			front++;
		}
	}
	printf("\n");
}